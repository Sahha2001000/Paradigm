class Rational:

    #  конструктор класса
    def __init__(self, num1=1, num2=1):
        if not isinstance(num1 or num2, (float, int)):
            raise TypeError('Error: value is incorrect')
        if num1 <= 0 or num2 <= 0:
            raise ValueError('Error: first value or second value is negative or zero.')

        self.__num1 = num1
        self.__num2 = num2

    @property
    def num1(self):
        return self.num1

    @property
    def num2(self):
        return self.num2

    @num1.setter
    def num1(self, value):
        if not isinstance(value, (int, float)):
            raise TypeError('Error: value is incorrect')

    @num2.setter
    def num2(self, value):
        if not isinstance(value, (int, float)):
            raise TypeError('Error: value is incorrect')

    # output constructor
    def __str__(self):
        return '({}, {})'.format(self.num1, self.num2)

    #  +
    def __add__(self):

        if self.num1 + self.num2:
            return self.__class__(self.num1.__add__(self.num2))
        return None

    # *
    def __mul__(self):

        if self.num1 * self.num2:
            return self.__class__(self.num1.__mul__(self.num2))
        return None

    # -
    def __sub__(self):

        if self.num1 - self.num2:
            return self.__class__(self.num1.__sub__(self.num2))
        return None

    # /
    def __truediv__(self):

        if self.num1 / self.num2:
            return self.__class__(self.num1.__truediv__(self.num2))
        return None

    # НОД
    def gcd(self):
        a = self.num1
        b = self.num2

        while a != 0 and b != 0:
            if a > b:
                a = a % b
            else:
                b = b % a
        return max(a, b)

    # дробная часть, сокращённая форма.
    def fraction(self):

        a = self.num1
        b = self.num2

        c = self.gcd()
        a = a // c
        b = b // c

        return '{0}/{1}'.format(a, b)

    #  дробная часть в формате плавающей точкой
    def dec_fraction(self, divider=1):
        a = self.num1
        b = self.num2

        a = a / divider
        b = b / divider
        return str(a / b)


def main():

    # print('''''')

    while 1:
        inp1 = input("inp1 ")
        if inp1 == 'exit':
            break

        inp2 = input("inp2 ")

        obj1 = Rational(inp1, inp2)
        print(inp1 / inp2)


if __name__ == '__main__':
    main()

